CREATE DATABASE pruebasdesarrollo;
USE pruebasdesarrollo;

-- Crear la tabla "Pais"
CREATE TABLE Pais (
    PaisID INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(255)
);

-- Crear la tabla "Estado"
CREATE TABLE Estado (
    EstadoID INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(255),
    PaisID INT,
    FOREIGN KEY (PaisID) REFERENCES Pais(PaisID)
);

-- Crear la tabla "Ciudad"
CREATE TABLE Ciudad (
    CiudadID INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(255),
    EstadoID INT,
    FOREIGN KEY (EstadoID) REFERENCES Estado(EstadoID)
);

-- Crear la tabla "Ubicacion"
CREATE TABLE Ubicacion (
    UbicacionID INT AUTO_INCREMENT PRIMARY KEY,
    PaisID INT,
    EstadoID INT,
    CiudadID INT,
    FOREIGN KEY (PaisID) REFERENCES Pais(PaisID),
    FOREIGN KEY (EstadoID) REFERENCES Estado(EstadoID),
    FOREIGN KEY (CiudadID) REFERENCES Ciudad(CiudadID)
);


-- Crear la tabla "Promotor"
CREATE TABLE Promotor (
    PromotorID INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(255),
    Correo VARCHAR(255),
    Passw VARCHAR(255),
    Telefono INT(10)
);

-- Crear la tabla "Leads"
CREATE TABLE Leads (
    LeadID INT AUTO_INCREMENT PRIMARY KEY,
    NombreCompleto VARCHAR(255),
    Telefono VARCHAR(20),
    Telefono2 VARCHAR(20),
    CorreoElectronico VARCHAR(255),
    CorreoElectronico2 VARCHAR(255),
    FechaPrimerContacto DATE,
    Edad INT(3),
    EscuelaProcedencia VARCHAR(255),
    UbicacionID INT,
    PSeguimiento ENUM('AU-ALUMNO UNINTER','INSC-INSCRIPCIÓIN','NC-NO CONTESTA', 'NI-NO INTERESA',
                      'P-PROSPECTO','PI-INSCRIPCIÓN', 'PS-SEGUIMIENTO','SC-SIN CONTACTO','PU-PERSONAL UNINTER','DU-DUPLICADO','DI-DATO NO VALIDO','BA-BAJA ALUMNO', 'VACIO'),
    CarreraInteresID INT,
    Grado ENUM('SECUNDARIA','BACHILLERATO','PREPA-A','LIC/ING','ESPECIALIDAD','DIPLOMADO','MAESTRIA','DOCTORADO','NO ESPECIFICA'),
    Programa ENUM('Psicología (LPS)','Derecho (LED)','Pedagogía (LPE)','Ciencias Políticas y Gestión Pública (LCP)',
                  'Relaciones Internacionales (LRI)','Relaciones Internacionales y Economía (RIEC)','Relaciones Internacionales y Ciencias Políticas (RICP)',
                  'Idiomas (LID)','Comunicación (LCO)','Comunicación Y Relaciones Públicas (CORP)','Civil (ICI)','Mecatrónica (IME)','Mecánica Industrial (IMI)',
                  'Industrial y de Sistemas de Calidad (IISCA)','Sistemas Computacionales (ISC)','Ambiental (IAM)','Arquitectura(ARQ)','Comercio Exterior (LCE)',
                  'Economía y Finanzas (LEF)','Mercadotecnia (LEM)','Mercadotecnia y Publicidad (LEMP)','Psicología Organizacional (LPO)','Administración de Empresas Turísticas (LAET)',
                  'Administración de Empresas (LAE)','Administración de Negocios Internacionales (LANI)','Administración Pública (LAP)','Administración y Mercadotecnia (LAM)',
                  'Diseño de Modas y Tendencias Internacionales (LDM)','Diseño Industrial (LDI)','Diseño Gráfico (LDG)','Animación y Diseño Digital (LADD)',
                  'Licenciatura Ejecutiva en Gestión Empresarial(LEGE)','Licenciatura Ejecutiva en Mercadotecnia(LEMK)','Licenciatura Ejecutiva en Administración de Negocios Internacionales(LEANI)',
                  'Licenciatura Ejecutiva en Administración y Mercadotecnia (LEAM)','Licenciatura en Ejecutiva Mercadotecnia y Publicidad (LEMKP)','Licenciatura en Ejecutiva Comercio Exterior (LECE)', 'OTRO'),
    EstatusInsc ENUM('INS','INZO','REZA'),
    SemestreIngresoID INT,
    Ciclo VARCHAR(10),
    CampanaID INT,
    IsOrganic ENUM('PAUTA', 'ORGÁNICO', '') NOT NULL DEFAULT '',
    MedioDeContactoID INT,
    -- referido
    TipoReferido ENUM('ESTUDIANTE','FAMILIAR DE ALGÚN ESTUDIANTE', 'PERSONAL UNINTER', 'NINGUNO'),
    NombreReferido VARCHAR(100),
    DondeObtDato ENUM('B_AFC','B_EMPRESAS','B_ESTRATEGIA VACACIONES EQUI','B_PERSONAL','B_POSGRADOS','BARRIDO BASE','BARRIDO EGRESADOS',
                      'BASE EGRESADOS','BASE FAMILIAR','CLIENGO','ESTRATEGIA EQUIPO MORADO','EXPO EDUCATIVA','REDES SOCIALES META FACEBOOK',
                      'REDES SOCIALES META INSTAGRAM', 'LANDING','LANDING CARRERAS','LANDING FORMULARIO','LANDING TOT','LLAMADA UNINTER','OPEN SCHOOL ESPECIAL POR CONVENIO CON EMPRESA','VISITA UNINTER'),
    FechaInscripcion DATE,
    BecaOfrecida DECIMAL(10, 2),
    NumeroLista INT,
    PromotorOriginal INT,
    NombrePromOrigi VARCHAR (255),
    FechaPromotorOriginal DATE,
    PromotorActual INT,
    NombrePromAct VARCHAR (255),
    FechaPromotorActual DATE,
    Comentarios TEXT,
    Contacto INT,
    estado BOOLEAN DEFAULT TRUE NOT NULL
);
-- Crear la tabla "Campana"
CREATE TABLE Campana (
    CampanaID INT AUTO_INCREMENT PRIMARY KEY,
    TipoCamp VARCHAR(255),
    Nombre VARCHAR(255)
);

-- Crear la tabla "CarreraInteres"
CREATE TABLE CarreraInteres (
    CarreraID INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(255)
);

-- Crear la tabla "Contacto"
CREATE TABLE Contacto (
	ContactoID INT AUTO_INCREMENT PRIMARY KEY,
    FechaContacto DATE,
    Comentario VARCHAR(255)
);

-- Crear la tabla "SemestreIngreso"
CREATE TABLE SemestreIngreso (
    SemestreID INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(255)
);

-- Crear la tabla "MedioDeContacto"
CREATE TABLE MedioDeContacto (
    MedioID INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(255)
);

-- Crear la tabla "Reasignaciones"
CREATE TABLE Reasignaciones (
    ReasignacionID INT AUTO_INCREMENT PRIMARY KEY,
    LeadID INT,
    PromotorAnterior INT,
    PromotorNuevo INT,
    FechaReasignacion DATETIME
);


CREATE TABLE ContactoAlumno(
	ContactoAlumnoID INT PRIMARY KEY auto_increment NOT NULL,
    FechaContacto date,
    Comentario text
);

CREATE TABLE Alumnos (
    AlumnoID INT AUTO_INCREMENT PRIMARY KEY,
    LeadID INT,
    NoRecibo VARCHAR(50),
	Matricula VARCHAR(50),
    Procedencia ENUM('Local', 'Foraneo'),
    TipoBaja ENUM('Temporal','Definitiva'),
    RSFacebook VARCHAR(50),
    RSInstagram VARCHAR(50),
    RSTiktok VARCHAR(50),
    RSLinkedln VARCHAR(255),
    RSTwiter VARCHAR(50),
    RSWhatsapp INT (15),
    RSOtro VARCHAR(255),
    ContactoID INT,
    Estatus boolean default true,
    FechaBaja date,
    CorreoInstitucional varchar (50),
    FOREIGN KEY (LeadID) REFERENCES Leads(LeadID),
    FOREIGN KEY (ContactoID) REFERENCES ContactoAlumno(ContactoAlumnoID)
);

-- Agregar la relación entre Leads y Ubicacion
ALTER TABLE Leads
ADD FOREIGN KEY (UbicacionID) REFERENCES Ubicacion(UbicacionID);

-- Agregar la relación entre Leads y CarreraInteres
ALTER TABLE Leads
ADD FOREIGN KEY (CarreraInteresID) REFERENCES CarreraInteres(CarreraID);

-- Agregar la relación entre Leads y SemestreIngreso
ALTER TABLE Leads
ADD FOREIGN KEY (SemestreIngresoID) REFERENCES SemestreIngreso(SemestreID);

-- Agregar la relación entre Leads y Campana
ALTER TABLE Leads
ADD FOREIGN KEY (CampanaID) REFERENCES Campana(CampanaID);

-- Agregar la relación entre Leads y MedioDeContacto
ALTER TABLE Leads
ADD FOREIGN KEY (MedioDeContactoID) REFERENCES MedioDeContacto(MedioID);

-- Agregar la relación entre Leads y PromotorOriginal
ALTER TABLE Leads
ADD FOREIGN KEY (PromotorOriginal) REFERENCES Promotor(PromotorID);

-- Agregar la relación entre Leads y PromotorActual
ALTER TABLE Leads
ADD FOREIGN KEY (PromotorActual) REFERENCES Promotor(PromotorID);

-- Agregar la relación entre Reasignaciones y Leads
ALTER TABLE Reasignaciones
ADD FOREIGN KEY (LeadID) REFERENCES Leads(LeadID);

-- Agregar la relación entre Reasignaciones y PromotorAnterior
ALTER TABLE Reasignaciones
ADD FOREIGN KEY (PromotorAnterior) REFERENCES Promotor(PromotorID);

-- Agregar la relación entre Reasignaciones y PromotorNuevo
ALTER TABLE Reasignaciones
ADD FOREIGN KEY (PromotorNuevo) REFERENCES Promotor(PromotorID);

-- Agregar la relación entre Leads y Contactos
ALTER TABLE Leads
ADD FOREIGN KEY (Contacto) REFERENCES Contacto(ContactoID);

SELECT
    L.NombreCompleto,
    UbiP.Nombre AS Pais,
    UbiE.Nombre AS Estado,
    UbiC.Nombre AS Ciudad
FROM Leads L
JOIN Ubicacion U ON L.UbicacionID = U.UbicacionID
JOIN Pais UbiP ON U.PaisID = UbiP.PaisID
JOIN Estado UbiE ON U.EstadoID = UbiE.EstadoID
JOIN Ciudad UbiC ON U.CiudadID = UbiC.CiudadID;



-- mis insert
#campana
INSERT INTO `campana` (`CampanaID`, `TipoCamp`, `Nombre`) VALUES (NULL, 'tiktok', 'las prez');
INSERT INTO `campana` (`CampanaID`, `TipoCamp`, `Nombre`) VALUES (NULL, 'facebook', 'hallowen fest');

#carrerainteres
INSERT INTO `carrerainteres` (`CarreraID`, `Nombre`) VALUES (NULL, 'Psicología (LPS)');
INSERT INTO `carrerainteres` (`CarreraID`, `Nombre`) VALUES (NULL, 'Derecho (LED)');

#contacto
INSERT INTO `contacto` (`ContactoID`, `FechaContacto`, `Comentario`) VALUES (NULL, '2023-10-25', 'respondio correo');
INSERT INTO `contacto` (`ContactoID`, `FechaContacto`, `Comentario`) VALUES (NULL, '2023-11-02', 'atendio llamada');

#mediodecontacto
INSERT INTO `mediodecontacto` (`MedioID`, `Nombre`) VALUES (NULL, 'correo');
INSERT INTO `mediodecontacto` (`MedioID`, `Nombre`) VALUES (NULL, 'llamada');

#pais
INSERT INTO `pais` (`PaisID`, `Nombre`) VALUES (NULL, 'México');
INSERT INTO `pais` (`PaisID`, `Nombre`) VALUES (NULL, 'Estados Unidos');

#estado
INSERT INTO `estado` (`EstadoID`, `Nombre`, `PaisID`) VALUES (NULL, 'Morelos', '1');
INSERT INTO `estado` (`EstadoID`, `Nombre`, `PaisID`) VALUES (NULL, 'Ney work', '2');

#ciudad
INSERT INTO `ciudad` (`CiudadID`, `Nombre`, `EstadoID`) VALUES (NULL, 'Cuernavaca', '1');
INSERT INTO `ciudad` (`CiudadID`, `Nombre`, `EstadoID`) VALUES (NULL, 'Queen', '2');

#promotor
INSERT INTO `promotor` (`PromotorID`, `Nombre`, `Correo`, `Passw`, `Telefono`) VALUES (NULL, 'ximena', 'ximena@correo.com', '123456', '777852632');
INSERT INTO `promotor` (`PromotorID`, `Nombre`, `Correo`, `Passw`, `Telefono`) VALUES (NULL, 'Yanin', 'yanin@correo.com', '123456', '77458623');

#semestreingreso
INSERT INTO `semestreingreso` (`SemestreID`, `Nombre`) VALUES (NULL, 'primer semestre');
INSERT INTO `semestreingreso` (`SemestreID`, `Nombre`) VALUES (NULL, 'segundo semestre');

#Ubicacion
INSERT INTO `ubicacion` (`UbicacionID`, `PaisID`, `EstadoID`, `CiudadID`) VALUES (NULL, '1', '1', '1');
INSERT INTO `ubicacion` (`UbicacionID`, `PaisID`, `EstadoID`, `CiudadID`) VALUES (NULL, '2', '2', '2');

#Leads
INSERT INTO `leads` (`LeadID`, `NombreCompleto`, `Telefono`, `Telefono2`, `CorreoElectronico`, `CorreoElectronico2`,
`FechaPrimerContacto`, `Edad`, `EscuelaProcedencia`, `UbicacionID`, `PSeguimiento`, `CarreraInteresID`, `Grado`, `Programa`, 
`EstatusInsc`, `SemestreIngresoID`, `Ciclo`, `CampanaID`, `IsOrganic`, `MedioDeContactoID`, `TipoReferido`, `NombreReferido`, 
`DondeObtDato`, `FechaInscripcion`, `BecaOfrecida`, `NumeroLista`, `PromotorOriginal`, `NombrePromOrigi`, `FechaPromotorOriginal`, 
`PromotorActual`, `NombrePromAct`, `FechaPromotorActual`, `Comentarios`, `Contacto`, `estado`) VALUES (NULL, 'Milton Jaimes', 
'55446789', NULL, 'milton@correo.com', NULL, '2023-11-02', '22', 'Cecyte', '1', 'P-PROSPECTO', '1', 'PREPA-A', 'Psicología (LPS)', 
'INS', '1', '2024', '2', 'PAUTA', '1', 'ESTUDIANTE', 'Mariaca', 'B_EMPRESAS', '2023-11-02', '20', '1', '1', 'Ximena', '2023-11-01', 
'1', 'Ximena', '2023-11-02', 'Contesto', '1', '1'), (NULL, 'Bryan Murga', '77765432', NULL, 'bryan@correo.com', NULL, '2023-10-10', 
'22', 'CETIS', '2', 'INSC-INSCRIPCIÓIN', '2', 'LIC/ING', 'Derecho (LED)', 'INZO', '2', '24', '1', 'ORGÁNICO', '2', 
'FAMILIAR DE ALGÚN ESTUDIANTE', 'Martinez', 'CLIENGO', '2023-11-01', '50', '2', '2', 'Yanin', '2023-11-01', NULL, 'Yanin', 
'2023-11-01', 'sigue interesado en la oportunidad de estudio', '2', '1');
INSERT INTO `leads` (`LeadID`, `NombreCompleto`, `Telefono`, `Telefono2`, `CorreoElectronico`, `CorreoElectronico2`, `FechaPrimerContacto`, `Edad`, `EscuelaProcedencia`, `UbicacionID`, `PSeguimiento`, `CarreraInteresID`, `Grado`, `Programa`, `EstatusInsc`, `SemestreIngresoID`, `Ciclo`, `CampanaID`, `IsOrganic`, `MedioDeContactoID`, `TipoReferido`, `NombreReferido`, `DondeObtDato`, `FechaInscripcion`, `BecaOfrecida`, `NumeroLista`, `PromotorOriginal`, `NombrePromOrigi`, `FechaPromotorOriginal`, `PromotorActual`, `NombrePromAct`, `FechaPromotorActual`, `Comentarios`, `Contacto`, `estado`) 
VALUES 
(NULL, 'Milton Jaimes', '55446789', NULL, 'milton@correo.com', NULL, '2023-11-02', '22', 'Cecyte', '1', 'P-PROSPECTO', '1', 'PREPA-A', 'Psicología (LPS)', 'INS', '1', '2024', '2', 'PAUTA', '1', 'ESTUDIANTE', 'Mariaca', 'B_EMPRESAS', '2023-11-02', '20', '1', '1', 'Ximena', '2023-11-01', '1', 'Ximena', '2023-11-02', 'Contesto', '1', '1'), 
(NULL, 'Bryan Murga', '77765432', NULL, 'bryan@correo.com', NULL, '2023-10-10', '22', 'CETIS', '2', 'INSC-INSCRIPCIÓN', '2', 'LIC/ING', 'Derecho (LED)', 'INZO', '2', '24', '1', 'ORGÁNICO', '2', 'FAMILIAR DE ALGÚN ESTUDIANTE', 'Martinez', 'CLIENGO', '2023-11-01', '50', '2', '2', 'Yanin', '2023-11-01', NULL, 'Yanin', '2023-11-01', 'sigue interesado en la oportunidad de estudio', '2', '1');

#reasignaciones
INSERT INTO `reasignaciones` (`ReasignacionID`, `LeadID`, `PromotorAnterior`, `PromotorNuevo`, `FechaReasignacion`) VALUES (NULL, '1', '1', '1', '2023-11-02 11:45:49');


#contactoAlumno
INSERT INTO `contactoalumno` (`ContactoAlumnoID`, `FechaContacto`, `Comentario`) 
VALUES 
(NULL, '2023-11-02', 'Se realizo un seguimiento de inscripción con el alumno');
INSERT INTO `contactoalumno` (`ContactoAlumnoID`, `FechaContacto`, `Comentario`) 
VALUES 
(NULL, '2023-11-03', 'se concluyo la inscripción');

#alumnos
INSERT INTO `alumnos` (`AlumnoID`, `LeadID`, `NoRecibo`, `Matricula`, `Procedencia`, `TipoBaja`, `RSFacebook`, `RSInstagram`, `RSTiktok`, `RSLinkedln`, `RSTwiter`, `RSWhatsapp`, `RSOtro`, `ContactoID`, `Estatus`, `FechaBaja`, `CorreoInstitucional`) 
VALUES 
(NULL, '1', '100', 'M26', 'Local', 'Temporal', 'si', NULL, NULL, NULL, NULL, NULL, NULL, '2', '1', NULL, 'milton@correo.com');
INSERT INTO `alumnos` (`AlumnoID`, `LeadID`, `NoRecibo`, `Matricula`, `Procedencia`, `TipoBaja`, `RSFacebook`, `RSInstagram`, `RSTiktok`, `RSLinkedln`, `RSTwiter`, `RSWhatsapp`, `RSOtro`, `ContactoID`, `Estatus`, `FechaBaja`, `CorreoInstitucional`) 
VALUES 
(NULL, '2', '101', 'B11', 'Foraneo', 'Definitiva', NULL, 'si', NULL, NULL, NULL, NULL, NULL, '2', '1', '2023-11-03', 'Bryan@correo.com');


-- Consultas a tablas

-- Consulta del nombre de los promotores Actual
SELECT 
	P.nombre as NombrePromotor
FROM Leads L
JOIN promotor P ON L.PromotorActual = P.PromotorID;

-- Consulta el nombre del promotor nuevo que se reasigno a un Lead
SELECT
	L.NombreCompleto,
	P.nombre as PromotorNuevo
FROM reasignaciones R
JOIN Leads L ON R.LeadID = L.LeadID
JOIN promotor P ON R.PromotorNuevo = P.promotorID;

-- Consulta la ubicacion de la ciudad de un LEAD 
SELECT
	L.NombreCompleto,
    C.Nombre
FROM ciudad C
JOIN ubicacion U ON C.ciudadID = U.ciudadID
JOIN leads L ON U.ubicacionID = L.ubicacionID;

-- Consulta de los Leads por el semestre de Ingreso
SELECT
	L.NombreCompleto,
    SemI.Nombre
FROM leads L
JOIN semestreingreso SemI ON L.SemestreIngresoID = SemI.SemestreID;

-- Consulta de carrera de Interes por Lead
SELECT 
	L.NombreCompleto,
    CI.Nombre
FROM leads L
JOIN carrerainteres CI ON L.CarreraInteresID = CI.CarreraID;

-- Consulta de por campana
SELECT
	L.NombreCompleto,
    C.Nombre
FROM leads L
JOIN campana C ON L.CampanaID = C.campanaID;

-- Consulta Medio de contacto
SELECT
	L.NombreCompleto,
    MC.Nombre
FROM leads L
JOIN mediodecontacto MC ON L.MedioDeContactoID = MC.MedioID;

-- Trigger para saber la cantidad de regisros por mes de los leads
use pruebasdesarrollo;
CREATE TABLE leadxmes (
	mes int,
    anio int,
    cantidad_registros int
);

CREATE TABLE leadxmes_promotor (
	mes int,
    anio int,
    nombrePromotor VARCHAR(255),
    cantidad_registros int
);

DELIMITER //
CREATE TRIGGER actualizar_conteo
AFTER INSERT ON leads
FOR EACH ROW
BEGIN
    DECLARE mes_insert INT;
    DECLARE anio_insert INT;
    SET mes_insert = MONTH(NEW.FechaPrimerContacto); -- Suponiendo que tienes una columna llamada "fecha" en tu tabla
    SET anio_insert = YEAR(NEW.FechaPrimerContacto);

    -- Verificar si ya existe un registro para el mes y año actual
    IF EXISTS (SELECT * FROM leadxmes WHERE mes = mes_insert AND anio = anio_insert) THEN
        -- Actualizar el conteo
        UPDATE leadxmes
        SET cantidad_registros = cantidad_registros + 1
        WHERE mes = mes_insert AND anio = anio_insert;
    ELSE
        -- Insertar un nuevo registro para el mes y año actual
        INSERT INTO leadxmes (mes, anio, cantidad_registros)
        VALUES (mes_insert, anio_insert, 1);
    END IF;
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER actualizar_conteo_leadoxpromotor
AFTER INSERT ON leads
FOR EACH ROW
BEGIN
    DECLARE mes_insert INT;
    DECLARE anio_insert INT;
    DECLARE promotor_insert VARCHAR(255);
    SET mes_insert = MONTH(NEW.FechaPrimerContacto); -- Suponiendo que tienes una columna llamada "fecha" en tu tabla
    SET anio_insert = YEAR(NEW.FechaPrimerContacto);
    SET promotor_insert = NEW.NombrePromAct;

    -- Verificar si ya existe un registro para el mes y año actual
    IF EXISTS (SELECT * FROM leadxmes_promotor WHERE mes = mes_insert AND anio = anio_insert AND nombrePromotor =  promotor_insert ) THEN
        -- Actualizar el conteo
        UPDATE leadxmes_promotor
        SET cantidad_registros = cantidad_registros + 1
        WHERE mes = mes_insert AND anio = anio_insert AND nombrePromotor = promotor_insert;
    ELSE
        -- Insertar un nuevo registro para el mes y año actual
        INSERT INTO leadxmes_promotor (mes, anio, nombrePromotor, cantidad_registros)
        VALUES (mes_insert, anio_insert, promotor_insert, 1);
    END IF;
END;
//
DELIMITER ;

SET SQL_SAFE_UPDATES = 0;

DELIMITER //
CREATE TRIGGER insert_alumnos
AFTER INSERT ON leads
FOR EACH ROW
BEGIN
    DECLARE leadIDInsert INT;
    DECLARE NoRecibo_insert VARCHAR(50);
    DECLARE Matricula_insert VARCHAR(50);
    DECLARE Matricula_insert VARCHAR(50);


    SET mes_insert = MONTH(NEW.FechaPrimerContacto); -- Suponiendo que tienes una columna llamada "fecha" en tu tabla
    SET anio_insert = YEAR(NEW.FechaPrimerContacto);
    SET promotor_insert = NEW.NombrePromAct;

    -- Verificar si ya existe un registro para el mes y año actual
    IF EXISTS (SELECT * FROM leadxmes_promotor WHERE mes = mes_insert AND anio = anio_insert AND nombrePromotor =  promotor_insert ) THEN
        -- Actualizar el conteo
        UPDATE leadxmes_promotor
        SET cantidad_registros = cantidad_registros + 1
        WHERE mes = mes_insert AND anio = anio_insert AND nombrePromotor = promotor_insert;
    ELSE
        -- Insertar un nuevo registro para el mes y año actual
        INSERT INTO leadxmes_promotor (mes, anio, nombrePromotor, cantidad_registros)
        VALUES (mes_insert, anio_insert, promotor_insert, 1);
    END IF;
END;
//
DELIMITER ;